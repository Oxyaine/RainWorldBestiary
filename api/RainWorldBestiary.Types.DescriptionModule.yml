### YamlMime:ManagedReference
items:
- uid: RainWorldBestiary.Types.DescriptionModule
  commentId: T:RainWorldBestiary.Types.DescriptionModule
  id: DescriptionModule
  parent: RainWorldBestiary.Types
  children:
  - RainWorldBestiary.Types.DescriptionModule.#ctor
  - RainWorldBestiary.Types.DescriptionModule.#ctor(RainWorldBestiary.Types.DescriptionModule)
  - RainWorldBestiary.Types.DescriptionModule.#ctor(System.String,RainWorldBestiary.Types.CreatureUnlockToken,System.Boolean)
  - RainWorldBestiary.Types.DescriptionModule.#ctor(System.String,System.Boolean)
  - RainWorldBestiary.Types.DescriptionModule.Body
  - RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  - RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  - RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked
  - RainWorldBestiary.Types.DescriptionModule.ModuleUnlockedCondition
  - RainWorldBestiary.Types.DescriptionModule.NewLine
  - RainWorldBestiary.Types.DescriptionModule.ToString
  - RainWorldBestiary.Types.DescriptionModule.Translate
  - RainWorldBestiary.Types.DescriptionModule.UnlockPipColor
  - RainWorldBestiary.Types.DescriptionModule.UnlockTokens
  langs:
  - csharp
  - vb
  name: DescriptionModule
  nameWithType: DescriptionModule
  fullName: RainWorldBestiary.Types.DescriptionModule
  type: Class
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: A piece of a description, can be given a lock ID to lock this part of an entries description
  example: []
  syntax:
    content: public class DescriptionModule
    content.vb: Public Class DescriptionModule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RainWorldBestiary.Types.DescriptionModule.UnlockTokens
  commentId: F:RainWorldBestiary.Types.DescriptionModule.UnlockTokens
  id: UnlockTokens
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: UnlockTokens
  nameWithType: DescriptionModule.UnlockTokens
  fullName: RainWorldBestiary.Types.DescriptionModule.UnlockTokens
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: All the unlock tokens of this description module, used to determine what requirements need to be met to unlock this part of the description
  example: []
  syntax:
    content: public CreatureUnlockToken[] UnlockTokens
    return:
      type: RainWorldBestiary.Types.CreatureUnlockToken[]
    content.vb: Public UnlockTokens As CreatureUnlockToken()
- uid: RainWorldBestiary.Types.DescriptionModule.ModuleUnlockedCondition
  commentId: F:RainWorldBestiary.Types.DescriptionModule.ModuleUnlockedCondition
  id: ModuleUnlockedCondition
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: ModuleUnlockedCondition
  nameWithType: DescriptionModule.ModuleUnlockedCondition
  fullName: RainWorldBestiary.Types.DescriptionModule.ModuleUnlockedCondition
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: The condition that specifies whether this entry is visible or not, if this returns true, then the entry is visible. You can leave this as the default, or set your own custom condition.
  remarks: Defaults to <xref href="RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Func<DescriptionModule, bool> ModuleUnlockedCondition
    return:
      type: System.Func{RainWorldBestiary.Types.DescriptionModule,System.Boolean}
    content.vb: Public ModuleUnlockedCondition As Func(Of DescriptionModule, Boolean)
- uid: RainWorldBestiary.Types.DescriptionModule.Body
  commentId: F:RainWorldBestiary.Types.DescriptionModule.Body
  id: Body
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: DescriptionModule.Body
  fullName: RainWorldBestiary.Types.DescriptionModule.Body
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: The text of this part of the entries description
  example: []
  syntax:
    content: public string Body
    return:
      type: System.String
    content.vb: Public Body As String
- uid: RainWorldBestiary.Types.DescriptionModule.NewLine
  commentId: F:RainWorldBestiary.Types.DescriptionModule.NewLine
  id: NewLine
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: NewLine
  nameWithType: DescriptionModule.NewLine
  fullName: RainWorldBestiary.Types.DescriptionModule.NewLine
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Whether this module and the previous module should be separated by a new line '\n', otherwise just separates with a space.
  example: []
  syntax:
    content: public bool NewLine
    return:
      type: System.Boolean
    content.vb: Public NewLine As Boolean
- uid: RainWorldBestiary.Types.DescriptionModule.Translate
  commentId: F:RainWorldBestiary.Types.DescriptionModule.Translate
  id: Translate
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: Translate
  nameWithType: DescriptionModule.Translate
  fullName: RainWorldBestiary.Types.DescriptionModule.Translate
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Whether this modules text will get run through the in game translator, if no translation is found, then the text will be placed
  example: []
  syntax:
    content: public bool Translate
    return:
      type: System.Boolean
    content.vb: Public Translate As Boolean
- uid: RainWorldBestiary.Types.DescriptionModule.UnlockPipColor
  commentId: F:RainWorldBestiary.Types.DescriptionModule.UnlockPipColor
  id: UnlockPipColor
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: UnlockPipColor
  nameWithType: DescriptionModule.UnlockPipColor
  fullName: RainWorldBestiary.Types.DescriptionModule.UnlockPipColor
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: The Color of the Unlock Pip for this Module
  example: []
  syntax:
    content: public Color UnlockPipColor
    return:
      type: UnityEngine.Color
    content.vb: Public UnlockPipColor As Color
- uid: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  commentId: M:RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  id: DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: DefaultModuleUnlockedCondition(DescriptionModule)
  nameWithType: DescriptionModule.DefaultModuleUnlockedCondition(DescriptionModule)
  fullName: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Checks all the UnlockIDs to determine if this module is visible or not
  example: []
  syntax:
    content: public static bool DefaultModuleUnlockedCondition(DescriptionModule info)
    parameters:
    - id: info
      type: RainWorldBestiary.Types.DescriptionModule
    return:
      type: System.Boolean
    content.vb: Public Shared Function DefaultModuleUnlockedCondition(info As DescriptionModule) As Boolean
  overload: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition*
- uid: RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  commentId: M:RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  id: CheckIfUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: CheckIfUnlockTokenValid(CreatureUnlockToken)
  nameWithType: DescriptionModule.CheckIfUnlockTokenValid(CreatureUnlockToken)
  fullName: RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Checks if this creature unlock token is null, the token type is none, or if it returns true when run through <xref href="RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool CheckIfUnlockTokenValid(CreatureUnlockToken unlockToken)
    parameters:
    - id: unlockToken
      type: RainWorldBestiary.Types.CreatureUnlockToken
    return:
      type: System.Boolean
      description: True if either of the conditions above is met
    content.vb: Public Shared Function CheckIfUnlockTokenValid(unlockToken As CreatureUnlockToken) As Boolean
  overload: RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid*
- uid: RainWorldBestiary.Types.DescriptionModule.#ctor
  commentId: M:RainWorldBestiary.Types.DescriptionModule.#ctor
  id: '#ctor'
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: DescriptionModule()
  nameWithType: DescriptionModule.DescriptionModule()
  fullName: RainWorldBestiary.Types.DescriptionModule.DescriptionModule()
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public DescriptionModule()
    content.vb: Public Sub New()
  overload: RainWorldBestiary.Types.DescriptionModule.#ctor*
  nameWithType.vb: DescriptionModule.New()
  fullName.vb: RainWorldBestiary.Types.DescriptionModule.New()
  name.vb: New()
- uid: RainWorldBestiary.Types.DescriptionModule.#ctor(System.String,System.Boolean)
  commentId: M:RainWorldBestiary.Types.DescriptionModule.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: DescriptionModule(string, bool)
  nameWithType: DescriptionModule.DescriptionModule(string, bool)
  fullName: RainWorldBestiary.Types.DescriptionModule.DescriptionModule(string, bool)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public DescriptionModule(string body, bool newLine = false)
    parameters:
    - id: body
      type: System.String
      description: The text of this part of the entries description
    - id: newLine
      type: System.Boolean
      description: Whether this module and the previous module should be separated by a new line '\n', otherwise just separates with a space.
    content.vb: Public Sub New(body As String, newLine As Boolean = False)
  overload: RainWorldBestiary.Types.DescriptionModule.#ctor*
  nameWithType.vb: DescriptionModule.New(String, Boolean)
  fullName.vb: RainWorldBestiary.Types.DescriptionModule.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: RainWorldBestiary.Types.DescriptionModule.#ctor(System.String,RainWorldBestiary.Types.CreatureUnlockToken,System.Boolean)
  commentId: M:RainWorldBestiary.Types.DescriptionModule.#ctor(System.String,RainWorldBestiary.Types.CreatureUnlockToken,System.Boolean)
  id: '#ctor(System.String,RainWorldBestiary.Types.CreatureUnlockToken,System.Boolean)'
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: DescriptionModule(string, CreatureUnlockToken, bool)
  nameWithType: DescriptionModule.DescriptionModule(string, CreatureUnlockToken, bool)
  fullName: RainWorldBestiary.Types.DescriptionModule.DescriptionModule(string, RainWorldBestiary.Types.CreatureUnlockToken, bool)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public DescriptionModule(string body, CreatureUnlockToken unlockToken, bool newLine = false)
    parameters:
    - id: body
      type: System.String
      description: The text of this part of the entries description
    - id: unlockToken
      type: RainWorldBestiary.Types.CreatureUnlockToken
      description: The unlock token of this description module, used to determine what requirements need to be met to unlock this part of the description
    - id: newLine
      type: System.Boolean
      description: Whether this module and the previous module should be separated by a new line '\n', otherwise just separates with a space.
    content.vb: Public Sub New(body As String, unlockToken As CreatureUnlockToken, newLine As Boolean = False)
  overload: RainWorldBestiary.Types.DescriptionModule.#ctor*
  nameWithType.vb: DescriptionModule.New(String, CreatureUnlockToken, Boolean)
  fullName.vb: RainWorldBestiary.Types.DescriptionModule.New(String, RainWorldBestiary.Types.CreatureUnlockToken, Boolean)
  name.vb: New(String, CreatureUnlockToken, Boolean)
- uid: RainWorldBestiary.Types.DescriptionModule.#ctor(RainWorldBestiary.Types.DescriptionModule)
  commentId: M:RainWorldBestiary.Types.DescriptionModule.#ctor(RainWorldBestiary.Types.DescriptionModule)
  id: '#ctor(RainWorldBestiary.Types.DescriptionModule)'
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: DescriptionModule(DescriptionModule)
  nameWithType: DescriptionModule.DescriptionModule(DescriptionModule)
  fullName: RainWorldBestiary.Types.DescriptionModule.DescriptionModule(RainWorldBestiary.Types.DescriptionModule)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Copy Operator
  example: []
  syntax:
    content: public DescriptionModule(DescriptionModule other)
    parameters:
    - id: other
      type: RainWorldBestiary.Types.DescriptionModule
    content.vb: Public Sub New(other As DescriptionModule)
  overload: RainWorldBestiary.Types.DescriptionModule.#ctor*
  nameWithType.vb: DescriptionModule.New(DescriptionModule)
  fullName.vb: RainWorldBestiary.Types.DescriptionModule.New(RainWorldBestiary.Types.DescriptionModule)
  name.vb: New(DescriptionModule)
- uid: RainWorldBestiary.Types.DescriptionModule.ToString
  commentId: M:RainWorldBestiary.Types.DescriptionModule.ToString
  id: ToString
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DescriptionModule.ToString()
  fullName: RainWorldBestiary.Types.DescriptionModule.ToString()
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Returns <xref href="RainWorldBestiary.Types.DescriptionModule.Body" data-throw-if-not-resolved="false"></xref>, if <xref href="RainWorldBestiary.Types.DescriptionModule.Translate" data-throw-if-not-resolved="false"></xref> is true, <xref href="RainWorldBestiary.Types.DescriptionModule.Body" data-throw-if-not-resolved="false"></xref> will get run through the in game translator first
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: <xref href="RainWorldBestiary.Types.DescriptionModule.Body" data-throw-if-not-resolved="false"></xref>, translated if <xref href="RainWorldBestiary.Types.DescriptionModule.Translate" data-throw-if-not-resolved="false"></xref> is true
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: RainWorldBestiary.Types.DescriptionModule.ToString*
- uid: RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked
  commentId: P:RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked
  id: ModuleUnlocked
  parent: RainWorldBestiary.Types.DescriptionModule
  langs:
  - csharp
  - vb
  name: ModuleUnlocked
  nameWithType: DescriptionModule.ModuleUnlocked
  fullName: RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked
  type: Property
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Returns true if the module is unlocked, else false
  example: []
  syntax:
    content: public bool ModuleUnlocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ModuleUnlocked As Boolean
  overload: RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked*
references:
- uid: RainWorldBestiary.Types
  commentId: N:RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.html
  name: RainWorldBestiary.Types
  nameWithType: RainWorldBestiary.Types
  fullName: RainWorldBestiary.Types
  spec.csharp:
  - uid: RainWorldBestiary
    name: RainWorldBestiary
    isExternal: true
    href: RainWorldBestiary.html
  - name: .
  - uid: RainWorldBestiary.Types
    name: Types
    isExternal: true
    href: RainWorldBestiary.Types.html
  spec.vb:
  - uid: RainWorldBestiary
    name: RainWorldBestiary
    isExternal: true
    href: RainWorldBestiary.html
  - name: .
  - uid: RainWorldBestiary.Types
    name: Types
    isExternal: true
    href: RainWorldBestiary.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RainWorldBestiary.Types.CreatureUnlockToken[]
  isExternal: true
  href: RainWorldBestiary.Types.CreatureUnlockToken.html
  name: CreatureUnlockToken[]
  nameWithType: CreatureUnlockToken[]
  fullName: RainWorldBestiary.Types.CreatureUnlockToken[]
  nameWithType.vb: CreatureUnlockToken()
  fullName.vb: RainWorldBestiary.Types.CreatureUnlockToken()
  name.vb: CreatureUnlockToken()
  spec.csharp:
  - uid: RainWorldBestiary.Types.CreatureUnlockToken
    name: CreatureUnlockToken
    isExternal: true
    href: RainWorldBestiary.Types.CreatureUnlockToken.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RainWorldBestiary.Types.CreatureUnlockToken
    name: CreatureUnlockToken
    isExternal: true
    href: RainWorldBestiary.Types.CreatureUnlockToken.html
  - name: (
  - name: )
- uid: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  commentId: M:RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_DefaultModuleUnlockedCondition_RainWorldBestiary_Types_DescriptionModule_
  name: DefaultModuleUnlockedCondition(DescriptionModule)
  nameWithType: DescriptionModule.DefaultModuleUnlockedCondition(DescriptionModule)
  fullName: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
  spec.csharp:
  - uid: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
    name: DefaultModuleUnlockedCondition
    isExternal: true
    href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_DefaultModuleUnlockedCondition_RainWorldBestiary_Types_DescriptionModule_
  - name: (
  - uid: RainWorldBestiary.Types.DescriptionModule
    name: DescriptionModule
    isExternal: true
    href: RainWorldBestiary.Types.DescriptionModule.html
  - name: )
  spec.vb:
  - uid: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition(RainWorldBestiary.Types.DescriptionModule)
    name: DefaultModuleUnlockedCondition
    isExternal: true
    href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_DefaultModuleUnlockedCondition_RainWorldBestiary_Types_DescriptionModule_
  - name: (
  - uid: RainWorldBestiary.Types.DescriptionModule
    name: DescriptionModule
    isExternal: true
    href: RainWorldBestiary.Types.DescriptionModule.html
  - name: )
- uid: System.Func{RainWorldBestiary.Types.DescriptionModule,System.Boolean}
  commentId: T:System.Func{RainWorldBestiary.Types.DescriptionModule,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<DescriptionModule, bool>
  nameWithType: Func<DescriptionModule, bool>
  fullName: System.Func<RainWorldBestiary.Types.DescriptionModule, bool>
  nameWithType.vb: Func(Of DescriptionModule, Boolean)
  fullName.vb: System.Func(Of RainWorldBestiary.Types.DescriptionModule, Boolean)
  name.vb: Func(Of DescriptionModule, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: RainWorldBestiary.Types.DescriptionModule
    name: DescriptionModule
    isExternal: true
    href: RainWorldBestiary.Types.DescriptionModule.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: RainWorldBestiary.Types.DescriptionModule
    name: DescriptionModule
    isExternal: true
    href: RainWorldBestiary.Types.DescriptionModule.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition*
  commentId: Overload:RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_DefaultModuleUnlockedCondition_RainWorldBestiary_Types_DescriptionModule_
  name: DefaultModuleUnlockedCondition
  nameWithType: DescriptionModule.DefaultModuleUnlockedCondition
  fullName: RainWorldBestiary.Types.DescriptionModule.DefaultModuleUnlockedCondition
- uid: RainWorldBestiary.Types.DescriptionModule
  commentId: T:RainWorldBestiary.Types.DescriptionModule
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html
  name: DescriptionModule
  nameWithType: DescriptionModule
  fullName: RainWorldBestiary.Types.DescriptionModule
- uid: RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  commentId: M:RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_IsUnlockTokenValid_RainWorldBestiary_Types_CreatureUnlockToken_
  name: IsUnlockTokenValid(CreatureUnlockToken)
  nameWithType: Bestiary.IsUnlockTokenValid(CreatureUnlockToken)
  fullName: RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  spec.csharp:
  - uid: RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
    name: IsUnlockTokenValid
    isExternal: true
    href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_IsUnlockTokenValid_RainWorldBestiary_Types_CreatureUnlockToken_
  - name: (
  - uid: RainWorldBestiary.Types.CreatureUnlockToken
    name: CreatureUnlockToken
    isExternal: true
    href: RainWorldBestiary.Types.CreatureUnlockToken.html
  - name: )
  spec.vb:
  - uid: RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
    name: IsUnlockTokenValid
    isExternal: true
    href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_IsUnlockTokenValid_RainWorldBestiary_Types_CreatureUnlockToken_
  - name: (
  - uid: RainWorldBestiary.Types.CreatureUnlockToken
    name: CreatureUnlockToken
    isExternal: true
    href: RainWorldBestiary.Types.CreatureUnlockToken.html
  - name: )
- uid: RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid*
  commentId: Overload:RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_CheckIfUnlockTokenValid_RainWorldBestiary_Types_CreatureUnlockToken_
  name: CheckIfUnlockTokenValid
  nameWithType: DescriptionModule.CheckIfUnlockTokenValid
  fullName: RainWorldBestiary.Types.DescriptionModule.CheckIfUnlockTokenValid
- uid: RainWorldBestiary.Types.CreatureUnlockToken
  commentId: T:RainWorldBestiary.Types.CreatureUnlockToken
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.CreatureUnlockToken.html
  name: CreatureUnlockToken
  nameWithType: CreatureUnlockToken
  fullName: RainWorldBestiary.Types.CreatureUnlockToken
- uid: RainWorldBestiary.Types.DescriptionModule.#ctor*
  commentId: Overload:RainWorldBestiary.Types.DescriptionModule.#ctor
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule__ctor
  name: DescriptionModule
  nameWithType: DescriptionModule.DescriptionModule
  fullName: RainWorldBestiary.Types.DescriptionModule.DescriptionModule
  nameWithType.vb: DescriptionModule.New
  fullName.vb: RainWorldBestiary.Types.DescriptionModule.New
  name.vb: New
- uid: RainWorldBestiary.Types.DescriptionModule.Body
  commentId: F:RainWorldBestiary.Types.DescriptionModule.Body
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_Body
  name: Body
  nameWithType: DescriptionModule.Body
  fullName: RainWorldBestiary.Types.DescriptionModule.Body
- uid: RainWorldBestiary.Types.DescriptionModule.Translate
  commentId: F:RainWorldBestiary.Types.DescriptionModule.Translate
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_Translate
  name: Translate
  nameWithType: DescriptionModule.Translate
  fullName: RainWorldBestiary.Types.DescriptionModule.Translate
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RainWorldBestiary.Types.DescriptionModule.ToString*
  commentId: Overload:RainWorldBestiary.Types.DescriptionModule.ToString
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_ToString
  name: ToString
  nameWithType: DescriptionModule.ToString
  fullName: RainWorldBestiary.Types.DescriptionModule.ToString
- uid: RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked*
  commentId: Overload:RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked
  isExternal: true
  href: RainWorldBestiary.Types.DescriptionModule.html#RainWorldBestiary_Types_DescriptionModule_ModuleUnlocked
  name: ModuleUnlocked
  nameWithType: DescriptionModule.ModuleUnlocked
  fullName: RainWorldBestiary.Types.DescriptionModule.ModuleUnlocked
