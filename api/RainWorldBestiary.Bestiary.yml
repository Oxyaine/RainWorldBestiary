### YamlMime:ManagedReference
items:
- uid: RainWorldBestiary.Bestiary
  commentId: T:RainWorldBestiary.Bestiary
  id: Bestiary
  parent: RainWorldBestiary
  children:
  - RainWorldBestiary.Bestiary.AddOrIncreaseToken(AbstractCreature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  - RainWorldBestiary.Bestiary.AddOrIncreaseToken(Creature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  - RainWorldBestiary.Bestiary.AddOrIncreaseToken(System.String,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  - RainWorldBestiary.Bestiary.GetCreatureUnlockName(AbstractCreature,System.Boolean)
  - RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature,System.Boolean)
  - RainWorldBestiary.Bestiary.GetEntryByReferenceID(System.String)
  - RainWorldBestiary.Bestiary.IsCreatureUnlocked(AbstractCreature)
  - RainWorldBestiary.Bestiary.IsCreatureUnlocked(Creature)
  - RainWorldBestiary.Bestiary.IsCreatureUnlocked(System.String)
  - RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  - RainWorldBestiary.Bestiary.SpecialIDsLogic
  - RainWorldBestiary.Bestiary.UnlockCreature(AbstractCreature)
  - RainWorldBestiary.Bestiary.UnlockCreature(Creature)
  - RainWorldBestiary.Bestiary.UnlockCreature(System.String)
  langs:
  - csharp
  - vb
  name: Bestiary
  nameWithType: Bestiary
  fullName: RainWorldBestiary.Bestiary
  type: Class
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: The main class for the bestiary, everything should be accessible from this class
  example: []
  syntax:
    content: public static class Bestiary
    content.vb: Public Module Bestiary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RainWorldBestiary.Bestiary.SpecialIDsLogic
  commentId: F:RainWorldBestiary.Bestiary.SpecialIDsLogic
  id: SpecialIDsLogic
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: SpecialIDsLogic
  nameWithType: Bestiary.SpecialIDsLogic
  fullName: RainWorldBestiary.Bestiary.SpecialIDsLogic
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Special logic to apply to certain IDs, for example, `CicadaA` and `CicadaB` (Squidacada's ID's) have custom logic to remove the `A` and `B` so its just `Cicada`
  example: []
  syntax:
    content: public static Dictionary<string, Func<string, string>> SpecialIDsLogic
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Func{System.String,System.String}}
    content.vb: Public Shared SpecialIDsLogic As Dictionary(Of String, Func(Of String, String))
- uid: RainWorldBestiary.Bestiary.UnlockCreature(System.String)
  commentId: M:RainWorldBestiary.Bestiary.UnlockCreature(System.String)
  id: UnlockCreature(System.String)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: UnlockCreature(string)
  nameWithType: Bestiary.UnlockCreature(string)
  fullName: RainWorldBestiary.Bestiary.UnlockCreature(string)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Adds this creatureID to the <xref href="RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs" data-throw-if-not-resolved="false"></xref> list if its not already added
  example: []
  syntax:
    content: public static void UnlockCreature(string creatureID)
    parameters:
    - id: creatureID
      type: System.String
    content.vb: Public Shared Sub UnlockCreature(creatureID As String)
  overload: RainWorldBestiary.Bestiary.UnlockCreature*
  nameWithType.vb: Bestiary.UnlockCreature(String)
  fullName.vb: RainWorldBestiary.Bestiary.UnlockCreature(String)
  name.vb: UnlockCreature(String)
- uid: RainWorldBestiary.Bestiary.UnlockCreature(Creature)
  commentId: M:RainWorldBestiary.Bestiary.UnlockCreature(Creature)
  id: UnlockCreature(Creature)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: UnlockCreature(Creature)
  nameWithType: Bestiary.UnlockCreature(Creature)
  fullName: RainWorldBestiary.Bestiary.UnlockCreature(Creature)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Adds this creatureID to the <xref href="RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs" data-throw-if-not-resolved="false"></xref> list if its not already added
  example: []
  syntax:
    content: public static void UnlockCreature(Creature creature)
    parameters:
    - id: creature
      type: Creature
      description: Automatically gets run through <xref href="RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub UnlockCreature(creature As Creature)
  overload: RainWorldBestiary.Bestiary.UnlockCreature*
- uid: RainWorldBestiary.Bestiary.UnlockCreature(AbstractCreature)
  commentId: M:RainWorldBestiary.Bestiary.UnlockCreature(AbstractCreature)
  id: UnlockCreature(AbstractCreature)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: UnlockCreature(AbstractCreature)
  nameWithType: Bestiary.UnlockCreature(AbstractCreature)
  fullName: RainWorldBestiary.Bestiary.UnlockCreature(AbstractCreature)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  example: []
  syntax:
    content: public static void UnlockCreature(AbstractCreature creature)
    parameters:
    - id: creature
      type: AbstractCreature
    content.vb: Public Shared Sub UnlockCreature(creature As AbstractCreature)
  overload: RainWorldBestiary.Bestiary.UnlockCreature*
- uid: RainWorldBestiary.Bestiary.IsCreatureUnlocked(System.String)
  commentId: M:RainWorldBestiary.Bestiary.IsCreatureUnlocked(System.String)
  id: IsCreatureUnlocked(System.String)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: IsCreatureUnlocked(string)
  nameWithType: Bestiary.IsCreatureUnlocked(string)
  fullName: RainWorldBestiary.Bestiary.IsCreatureUnlocked(string)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if this creature is found in either the <xref href="RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs" data-throw-if-not-resolved="false"></xref> or <xref href="RainWorldBestiary.Bestiary.CreatureUnlockIDsOverride" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsCreatureUnlocked(string creatureId)
    parameters:
    - id: creatureId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCreatureUnlocked(creatureId As String) As Boolean
  overload: RainWorldBestiary.Bestiary.IsCreatureUnlocked*
  nameWithType.vb: Bestiary.IsCreatureUnlocked(String)
  fullName.vb: RainWorldBestiary.Bestiary.IsCreatureUnlocked(String)
  name.vb: IsCreatureUnlocked(String)
- uid: RainWorldBestiary.Bestiary.IsCreatureUnlocked(Creature)
  commentId: M:RainWorldBestiary.Bestiary.IsCreatureUnlocked(Creature)
  id: IsCreatureUnlocked(Creature)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: IsCreatureUnlocked(Creature)
  nameWithType: Bestiary.IsCreatureUnlocked(Creature)
  fullName: RainWorldBestiary.Bestiary.IsCreatureUnlocked(Creature)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if this creature is found in either the <xref href="RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs" data-throw-if-not-resolved="false"></xref> or <xref href="RainWorldBestiary.Bestiary.CreatureUnlockIDsOverride" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsCreatureUnlocked(Creature creature)
    parameters:
    - id: creature
      type: Creature
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCreatureUnlocked(creature As Creature) As Boolean
  overload: RainWorldBestiary.Bestiary.IsCreatureUnlocked*
- uid: RainWorldBestiary.Bestiary.IsCreatureUnlocked(AbstractCreature)
  commentId: M:RainWorldBestiary.Bestiary.IsCreatureUnlocked(AbstractCreature)
  id: IsCreatureUnlocked(AbstractCreature)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: IsCreatureUnlocked(AbstractCreature)
  nameWithType: Bestiary.IsCreatureUnlocked(AbstractCreature)
  fullName: RainWorldBestiary.Bestiary.IsCreatureUnlocked(AbstractCreature)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if this creature is found in either the <xref href="RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs" data-throw-if-not-resolved="false"></xref> or <xref href="RainWorldBestiary.Bestiary.CreatureUnlockIDsOverride" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsCreatureUnlocked(AbstractCreature creature)
    parameters:
    - id: creature
      type: AbstractCreature
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCreatureUnlocked(creature As AbstractCreature) As Boolean
  overload: RainWorldBestiary.Bestiary.IsCreatureUnlocked*
- uid: RainWorldBestiary.Bestiary.AddOrIncreaseToken(System.String,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  commentId: M:RainWorldBestiary.Bestiary.AddOrIncreaseToken(System.String,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  id: AddOrIncreaseToken(System.String,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: AddOrIncreaseToken(string, UnlockTokenType, bool, params string[])
  nameWithType: Bestiary.AddOrIncreaseToken(string, UnlockTokenType, bool, params string[])
  fullName: RainWorldBestiary.Bestiary.AddOrIncreaseToken(string, RainWorldBestiary.Types.UnlockTokenType, bool, params string[])
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if <xref href="RainWorldBestiary.Types.BestiaryData.ModuleUnlocks" data-throw-if-not-resolved="false"></xref> contains the <xref href="RainWorldBestiary.Types.UnlockTokenType" data-throw-if-not-resolved="false"></xref> for the given creature ID, if it does, it increases the token, otherwise adds it as a new token
  remarks: The token will only get added, if the token takes part in unlocking a description module, so if the token will never unlock a module, it wont get added. You can override this by setting <code class="paramref">alwaysAddToken</code> to true.
  example: []
  syntax:
    content: public static void AddOrIncreaseToken(string creatureID, UnlockTokenType tokenType, bool alwaysAddToken = false, params string[] SpecialData)
    parameters:
    - id: creatureID
      type: System.String
      description: The ID of the creature this token is for
    - id: tokenType
      type: RainWorldBestiary.Types.UnlockTokenType
      description: The type of token
    - id: alwaysAddToken
      type: System.Boolean
      description: Whether to always add this token, regardless of whether this token will be used
    - id: SpecialData
      type: System.String[]
      description: The special data to add onto the token
    content.vb: Public Shared Sub AddOrIncreaseToken(creatureID As String, tokenType As UnlockTokenType, alwaysAddToken As Boolean = False, ParamArray SpecialData As String())
  overload: RainWorldBestiary.Bestiary.AddOrIncreaseToken*
  nameWithType.vb: Bestiary.AddOrIncreaseToken(String, UnlockTokenType, Boolean, ParamArray String())
  fullName.vb: RainWorldBestiary.Bestiary.AddOrIncreaseToken(String, RainWorldBestiary.Types.UnlockTokenType, Boolean, ParamArray String())
  name.vb: AddOrIncreaseToken(String, UnlockTokenType, Boolean, ParamArray String())
- uid: RainWorldBestiary.Bestiary.AddOrIncreaseToken(Creature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  commentId: M:RainWorldBestiary.Bestiary.AddOrIncreaseToken(Creature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  id: AddOrIncreaseToken(Creature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: AddOrIncreaseToken(Creature, UnlockTokenType, bool, params string[])
  nameWithType: Bestiary.AddOrIncreaseToken(Creature, UnlockTokenType, bool, params string[])
  fullName: RainWorldBestiary.Bestiary.AddOrIncreaseToken(Creature, RainWorldBestiary.Types.UnlockTokenType, bool, params string[])
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if <xref href="RainWorldBestiary.Types.BestiaryData.ModuleUnlocks" data-throw-if-not-resolved="false"></xref> contains the <xref href="RainWorldBestiary.Types.UnlockTokenType" data-throw-if-not-resolved="false"></xref> for the given creature ID, if it does, it increases the token, otherwise adds it as a new token
  remarks: The token will only get added, if the token takes part in unlocking a description module, so if the token will never unlock a module, it wont get added. You can override this by setting <code class="paramref">alwaysAddToken</code> to true.
  example: []
  syntax:
    content: public static void AddOrIncreaseToken(Creature creature, UnlockTokenType tokenType, bool alwaysAddToken = false, params string[] SpecialData)
    parameters:
    - id: creature
      type: Creature
    - id: tokenType
      type: RainWorldBestiary.Types.UnlockTokenType
      description: The type of token
    - id: alwaysAddToken
      type: System.Boolean
      description: Whether to always add this token, regardless of whether this token will be used
    - id: SpecialData
      type: System.String[]
      description: The special data to add onto the token
    content.vb: Public Shared Sub AddOrIncreaseToken(creature As Creature, tokenType As UnlockTokenType, alwaysAddToken As Boolean = False, ParamArray SpecialData As String())
  overload: RainWorldBestiary.Bestiary.AddOrIncreaseToken*
  nameWithType.vb: Bestiary.AddOrIncreaseToken(Creature, UnlockTokenType, Boolean, ParamArray String())
  fullName.vb: RainWorldBestiary.Bestiary.AddOrIncreaseToken(Creature, RainWorldBestiary.Types.UnlockTokenType, Boolean, ParamArray String())
  name.vb: AddOrIncreaseToken(Creature, UnlockTokenType, Boolean, ParamArray String())
- uid: RainWorldBestiary.Bestiary.AddOrIncreaseToken(AbstractCreature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  commentId: M:RainWorldBestiary.Bestiary.AddOrIncreaseToken(AbstractCreature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  id: AddOrIncreaseToken(AbstractCreature,RainWorldBestiary.Types.UnlockTokenType,System.Boolean,System.String[])
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: AddOrIncreaseToken(AbstractCreature, UnlockTokenType, bool, params string[])
  nameWithType: Bestiary.AddOrIncreaseToken(AbstractCreature, UnlockTokenType, bool, params string[])
  fullName: RainWorldBestiary.Bestiary.AddOrIncreaseToken(AbstractCreature, RainWorldBestiary.Types.UnlockTokenType, bool, params string[])
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if <xref href="RainWorldBestiary.Types.BestiaryData.ModuleUnlocks" data-throw-if-not-resolved="false"></xref> contains the <xref href="RainWorldBestiary.Types.UnlockTokenType" data-throw-if-not-resolved="false"></xref> for the given creature ID, if it does, it increases the token, otherwise adds it as a new token
  remarks: The token will only get added, if the token takes part in unlocking a description module, so if the token will never unlock a module, it wont get added. You can override this by setting <code class="paramref">alwaysAddToken</code> to true.
  example: []
  syntax:
    content: public static void AddOrIncreaseToken(AbstractCreature creature, UnlockTokenType tokenType, bool alwaysAddToken = false, params string[] SpecialData)
    parameters:
    - id: creature
      type: AbstractCreature
    - id: tokenType
      type: RainWorldBestiary.Types.UnlockTokenType
      description: The type of token
    - id: alwaysAddToken
      type: System.Boolean
      description: Whether to always add this token, regardless of whether this token will be used
    - id: SpecialData
      type: System.String[]
      description: The special data to add onto the token
    content.vb: Public Shared Sub AddOrIncreaseToken(creature As AbstractCreature, tokenType As UnlockTokenType, alwaysAddToken As Boolean = False, ParamArray SpecialData As String())
  overload: RainWorldBestiary.Bestiary.AddOrIncreaseToken*
  nameWithType.vb: Bestiary.AddOrIncreaseToken(AbstractCreature, UnlockTokenType, Boolean, ParamArray String())
  fullName.vb: RainWorldBestiary.Bestiary.AddOrIncreaseToken(AbstractCreature, RainWorldBestiary.Types.UnlockTokenType, Boolean, ParamArray String())
  name.vb: AddOrIncreaseToken(AbstractCreature, UnlockTokenType, Boolean, ParamArray String())
- uid: RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  commentId: M:RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  id: IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: IsUnlockTokenValid(CreatureUnlockToken)
  nameWithType: Bestiary.IsUnlockTokenValid(CreatureUnlockToken)
  fullName: RainWorldBestiary.Bestiary.IsUnlockTokenValid(RainWorldBestiary.Types.CreatureUnlockToken)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Checks if the given token is in either AutoModuleUnlocks or ModuleUnlocks
  remarks: >-
    Returns true if the count is equal to or greater than the value in the registered token<pre><code class="lang-csharp"></code></pre>
                Does not take into account if <xref href="RainWorldBestiary.Bestiary.Settings.UnlockAllEntries" data-throw-if-not-resolved="false"></xref> is toggled
  example: []
  syntax:
    content: public static bool IsUnlockTokenValid(CreatureUnlockToken unlockToken)
    parameters:
    - id: unlockToken
      type: RainWorldBestiary.Types.CreatureUnlockToken
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsUnlockTokenValid(unlockToken As CreatureUnlockToken) As Boolean
  overload: RainWorldBestiary.Bestiary.IsUnlockTokenValid*
- uid: RainWorldBestiary.Bestiary.GetEntryByReferenceID(System.String)
  commentId: M:RainWorldBestiary.Bestiary.GetEntryByReferenceID(System.String)
  id: GetEntryByReferenceID(System.String)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: GetEntryByReferenceID(string)
  nameWithType: Bestiary.GetEntryByReferenceID(string)
  fullName: RainWorldBestiary.Bestiary.GetEntryByReferenceID(string)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: >-
    Gets an entry using a reference id, <pre><code class="lang-csharp"></code></pre>

    Reference IDs contain the name of the tab to look in (case sensitive), plus the name of the entry to look for (also case sensitive, this is the name given to the entry, not the translated result), separated by either a forward or backward slash.

    Valid IDs include:

    <pre><code class="lang-csharp">Rain World/creaturetype_Fly</code></pre><pre><code class="lang-csharp">Rain World\creaturetype_CicadaA</code></pre><pre><code class="lang-csharp">Downpour/The Gourmand</code></pre>

    Invalid IDs include

    <pre><code class="lang-csharp">rain world/creaturetype_Fly</code></pre><pre><code class="lang-csharp">RainWorld/creaturetype_Fly</code></pre><pre><code class="lang-csharp">/Rain World/creaturetype_Fly</code></pre>
  example: []
  syntax:
    content: public static Entry GetEntryByReferenceID(string refID)
    parameters:
    - id: refID
      type: System.String
    return:
      type: RainWorldBestiary.Types.Entry
      description: The entry that was found, if no entry was found, null is returned
    content.vb: Public Shared Function GetEntryByReferenceID(refID As String) As Entry
  overload: RainWorldBestiary.Bestiary.GetEntryByReferenceID*
  nameWithType.vb: Bestiary.GetEntryByReferenceID(String)
  fullName.vb: RainWorldBestiary.Bestiary.GetEntryByReferenceID(String)
  name.vb: GetEntryByReferenceID(String)
- uid: RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature,System.Boolean)
  commentId: M:RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature,System.Boolean)
  id: GetCreatureUnlockName(Creature,System.Boolean)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: GetCreatureUnlockName(Creature, bool)
  nameWithType: Bestiary.GetCreatureUnlockName(Creature, bool)
  fullName: RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature, bool)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  example: []
  syntax:
    content: public static string GetCreatureUnlockName(Creature creature, bool useSpecialIdLogic = true)
    parameters:
    - id: creature
      type: Creature
    - id: useSpecialIdLogic
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function GetCreatureUnlockName(creature As Creature, useSpecialIdLogic As Boolean = True) As String
  overload: RainWorldBestiary.Bestiary.GetCreatureUnlockName*
  nameWithType.vb: Bestiary.GetCreatureUnlockName(Creature, Boolean)
  fullName.vb: RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature, Boolean)
  name.vb: GetCreatureUnlockName(Creature, Boolean)
- uid: RainWorldBestiary.Bestiary.GetCreatureUnlockName(AbstractCreature,System.Boolean)
  commentId: M:RainWorldBestiary.Bestiary.GetCreatureUnlockName(AbstractCreature,System.Boolean)
  id: GetCreatureUnlockName(AbstractCreature,System.Boolean)
  parent: RainWorldBestiary.Bestiary
  langs:
  - csharp
  - vb
  name: GetCreatureUnlockName(AbstractCreature, bool)
  nameWithType: Bestiary.GetCreatureUnlockName(AbstractCreature, bool)
  fullName: RainWorldBestiary.Bestiary.GetCreatureUnlockName(AbstractCreature, bool)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary
  summary: Gets the creatures name through <xref href="AbstractCreature.creatureTemplate" data-throw-if-not-resolved="false"></xref> and removes all white space characters
  example: []
  syntax:
    content: public static string GetCreatureUnlockName(AbstractCreature creature, bool useSpecialIdLogic = true)
    parameters:
    - id: creature
      type: AbstractCreature
      description: The creature to get the ID of
    - id: useSpecialIdLogic
      type: System.Boolean
      description: Whether to check through <xref href="RainWorldBestiary.Bestiary.SpecialIDsLogic" data-throw-if-not-resolved="false"></xref> for any additional logic that should be applied
    return:
      type: System.String
    content.vb: Public Shared Function GetCreatureUnlockName(creature As AbstractCreature, useSpecialIdLogic As Boolean = True) As String
  overload: RainWorldBestiary.Bestiary.GetCreatureUnlockName*
  nameWithType.vb: Bestiary.GetCreatureUnlockName(AbstractCreature, Boolean)
  fullName.vb: RainWorldBestiary.Bestiary.GetCreatureUnlockName(AbstractCreature, Boolean)
  name.vb: GetCreatureUnlockName(AbstractCreature, Boolean)
references:
- uid: RainWorldBestiary
  commentId: N:RainWorldBestiary
  isExternal: true
  href: RainWorldBestiary.html
  name: RainWorldBestiary
  nameWithType: RainWorldBestiary
  fullName: RainWorldBestiary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.String,System.Func{System.String,System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Func{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Func<string, string>>
  nameWithType: Dictionary<string, Func<string, string>>
  fullName: System.Collections.Generic.Dictionary<string, System.Func<string, string>>
  nameWithType.vb: Dictionary(Of String, Func(Of String, String))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Func(Of String, String))
  name.vb: Dictionary(Of String, Func(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs
  commentId: F:RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs
  isExternal: true
  href: RainWorldBestiary.Types.BestiaryData.html#RainWorldBestiary_Types_BestiaryData_CreatureUnlockIDs
  name: CreatureUnlockIDs
  nameWithType: BestiaryData.CreatureUnlockIDs
  fullName: RainWorldBestiary.Types.BestiaryData.CreatureUnlockIDs
- uid: RainWorldBestiary.Bestiary.UnlockCreature*
  commentId: Overload:RainWorldBestiary.Bestiary.UnlockCreature
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_UnlockCreature_System_String_
  name: UnlockCreature
  nameWithType: Bestiary.UnlockCreature
  fullName: RainWorldBestiary.Bestiary.UnlockCreature
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature,System.Boolean)
  commentId: M:RainWorldBestiary.Bestiary.GetCreatureUnlockName(Creature,System.Boolean)
  isExternal: true
- uid: Creature
  isExternal: true
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: AbstractCreature
  isExternal: true
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: RainWorldBestiary.Bestiary.CreatureUnlockIDsOverride
  commentId: F:RainWorldBestiary.Bestiary.CreatureUnlockIDsOverride
  isExternal: true
- uid: RainWorldBestiary.Bestiary.IsCreatureUnlocked*
  commentId: Overload:RainWorldBestiary.Bestiary.IsCreatureUnlocked
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_IsCreatureUnlocked_System_String_
  name: IsCreatureUnlocked
  nameWithType: Bestiary.IsCreatureUnlocked
  fullName: RainWorldBestiary.Bestiary.IsCreatureUnlocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RainWorldBestiary.Types.BestiaryData.ModuleUnlocks
  commentId: F:RainWorldBestiary.Types.BestiaryData.ModuleUnlocks
  isExternal: true
  href: RainWorldBestiary.Types.BestiaryData.html#RainWorldBestiary_Types_BestiaryData_ModuleUnlocks
  name: ModuleUnlocks
  nameWithType: BestiaryData.ModuleUnlocks
  fullName: RainWorldBestiary.Types.BestiaryData.ModuleUnlocks
- uid: RainWorldBestiary.Types.UnlockTokenType
  commentId: T:RainWorldBestiary.Types.UnlockTokenType
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.UnlockTokenType.html
  name: UnlockTokenType
  nameWithType: UnlockTokenType
  fullName: RainWorldBestiary.Types.UnlockTokenType
- uid: RainWorldBestiary.Bestiary.AddOrIncreaseToken*
  commentId: Overload:RainWorldBestiary.Bestiary.AddOrIncreaseToken
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_AddOrIncreaseToken_System_String_RainWorldBestiary_Types_UnlockTokenType_System_Boolean_System_String___
  name: AddOrIncreaseToken
  nameWithType: Bestiary.AddOrIncreaseToken
  fullName: RainWorldBestiary.Bestiary.AddOrIncreaseToken
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: RainWorldBestiary.Types
  commentId: N:RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.html
  name: RainWorldBestiary.Types
  nameWithType: RainWorldBestiary.Types
  fullName: RainWorldBestiary.Types
  spec.csharp:
  - uid: RainWorldBestiary
    name: RainWorldBestiary
    isExternal: true
    href: RainWorldBestiary.html
  - name: .
  - uid: RainWorldBestiary.Types
    name: Types
    isExternal: true
    href: RainWorldBestiary.Types.html
  spec.vb:
  - uid: RainWorldBestiary
    name: RainWorldBestiary
    isExternal: true
    href: RainWorldBestiary.html
  - name: .
  - uid: RainWorldBestiary.Types
    name: Types
    isExternal: true
    href: RainWorldBestiary.Types.html
- uid: RainWorldBestiary.Bestiary.Settings.UnlockAllEntries
  commentId: F:RainWorldBestiary.Bestiary.Settings.UnlockAllEntries
  isExternal: true
  href: RainWorldBestiary.Bestiary.Settings.html#RainWorldBestiary_Bestiary_Settings_UnlockAllEntries
  name: UnlockAllEntries
  nameWithType: Bestiary.Settings.UnlockAllEntries
  fullName: RainWorldBestiary.Bestiary.Settings.UnlockAllEntries
- uid: RainWorldBestiary.Bestiary.IsUnlockTokenValid*
  commentId: Overload:RainWorldBestiary.Bestiary.IsUnlockTokenValid
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_IsUnlockTokenValid_RainWorldBestiary_Types_CreatureUnlockToken_
  name: IsUnlockTokenValid
  nameWithType: Bestiary.IsUnlockTokenValid
  fullName: RainWorldBestiary.Bestiary.IsUnlockTokenValid
- uid: RainWorldBestiary.Types.CreatureUnlockToken
  commentId: T:RainWorldBestiary.Types.CreatureUnlockToken
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.CreatureUnlockToken.html
  name: CreatureUnlockToken
  nameWithType: CreatureUnlockToken
  fullName: RainWorldBestiary.Types.CreatureUnlockToken
- uid: RainWorldBestiary.Bestiary.GetEntryByReferenceID*
  commentId: Overload:RainWorldBestiary.Bestiary.GetEntryByReferenceID
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_GetEntryByReferenceID_System_String_
  name: GetEntryByReferenceID
  nameWithType: Bestiary.GetEntryByReferenceID
  fullName: RainWorldBestiary.Bestiary.GetEntryByReferenceID
- uid: RainWorldBestiary.Types.Entry
  commentId: T:RainWorldBestiary.Types.Entry
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.Entry.html
  name: Entry
  nameWithType: Entry
  fullName: RainWorldBestiary.Types.Entry
- uid: RainWorldBestiary.Bestiary.GetCreatureUnlockName*
  commentId: Overload:RainWorldBestiary.Bestiary.GetCreatureUnlockName
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_GetCreatureUnlockName_Creature_System_Boolean_
  name: GetCreatureUnlockName
  nameWithType: Bestiary.GetCreatureUnlockName
  fullName: RainWorldBestiary.Bestiary.GetCreatureUnlockName
- uid: AbstractCreature.creatureTemplate
  commentId: F:AbstractCreature.creatureTemplate
  isExternal: true
- uid: RainWorldBestiary.Bestiary.SpecialIDsLogic
  commentId: F:RainWorldBestiary.Bestiary.SpecialIDsLogic
  isExternal: true
  href: RainWorldBestiary.Bestiary.html#RainWorldBestiary_Bestiary_SpecialIDsLogic
  name: SpecialIDsLogic
  nameWithType: Bestiary.SpecialIDsLogic
  fullName: RainWorldBestiary.Bestiary.SpecialIDsLogic
