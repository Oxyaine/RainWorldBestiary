### YamlMime:ManagedReference
items:
- uid: RainWorldBestiary.Types.Entry
  commentId: T:RainWorldBestiary.Types.Entry
  id: Entry
  parent: RainWorldBestiary.Types
  children:
  - RainWorldBestiary.Types.Entry.#ctor
  - RainWorldBestiary.Types.Entry.#ctor(System.String,RainWorldBestiary.Types.Description,System.String,System.String,System.String,System.String)
  - RainWorldBestiary.Types.Entry.#ctor(System.String,RainWorldBestiary.Types.EntryInfo,System.String)
  - RainWorldBestiary.Types.Entry.#ctor(System.String,System.String)
  - RainWorldBestiary.Types.Entry.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  - RainWorldBestiary.Types.Entry.Equals(RainWorldBestiary.Types.Entry)
  - RainWorldBestiary.Types.Entry.Error
  - RainWorldBestiary.Types.Entry.Info
  - RainWorldBestiary.Types.Entry.Name
  langs:
  - csharp
  - vb
  name: Entry
  nameWithType: Entry
  fullName: RainWorldBestiary.Types.Entry
  type: Class
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: A class representing an entry
  example: []
  syntax:
    content: 'public class Entry : IEquatable<Entry>'
    content.vb: Public Class Entry Implements IEquatable(Of Entry)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{RainWorldBestiary.Types.Entry}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RainWorldBestiary.Types.Entry.Name
  commentId: F:RainWorldBestiary.Types.Entry.Name
  id: Name
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Entry.Name
  fullName: RainWorldBestiary.Types.Entry.Name
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: The name of this entry
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: RainWorldBestiary.Types.Entry.Info
  commentId: F:RainWorldBestiary.Types.Entry.Info
  id: Info
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: Entry.Info
  fullName: RainWorldBestiary.Types.Entry.Info
  type: Field
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: The information of this entry, such as its unlock id, icon, scene to show while reading, and description
  example: []
  syntax:
    content: public EntryInfo Info
    return:
      type: RainWorldBestiary.Types.EntryInfo
    content.vb: Public Info As EntryInfo
- uid: RainWorldBestiary.Types.Entry.#ctor
  commentId: M:RainWorldBestiary.Types.Entry.#ctor
  id: '#ctor'
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Entry()
  nameWithType: Entry.Entry()
  fullName: RainWorldBestiary.Types.Entry.Entry()
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public Entry()
    content.vb: Public Sub New()
  overload: RainWorldBestiary.Types.Entry.#ctor*
  nameWithType.vb: Entry.New()
  fullName.vb: RainWorldBestiary.Types.Entry.New()
  name.vb: New()
- uid: RainWorldBestiary.Types.Entry.#ctor(System.String,System.String)
  commentId: M:RainWorldBestiary.Types.Entry.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Entry(string, string)
  nameWithType: Entry.Entry(string, string)
  fullName: RainWorldBestiary.Types.Entry.Entry(string, string)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public Entry(string name, string owningModID = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: owningModID
      type: System.String
      description: The ID of the mod (id that is set in `modinfo.json` file) that this entry belongs to, set this if you'd like this entry to automatically unload when the mod gets disabled
    content.vb: Public Sub New(name As String, owningModID As String = Nothing)
  overload: RainWorldBestiary.Types.Entry.#ctor*
  nameWithType.vb: Entry.New(String, String)
  fullName.vb: RainWorldBestiary.Types.Entry.New(String, String)
  name.vb: New(String, String)
- uid: RainWorldBestiary.Types.Entry.#ctor(System.String,RainWorldBestiary.Types.EntryInfo,System.String)
  commentId: M:RainWorldBestiary.Types.Entry.#ctor(System.String,RainWorldBestiary.Types.EntryInfo,System.String)
  id: '#ctor(System.String,RainWorldBestiary.Types.EntryInfo,System.String)'
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Entry(string, EntryInfo, string)
  nameWithType: Entry.Entry(string, EntryInfo, string)
  fullName: RainWorldBestiary.Types.Entry.Entry(string, RainWorldBestiary.Types.EntryInfo, string)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public Entry(string name, EntryInfo info, string owningModID = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: info
      type: RainWorldBestiary.Types.EntryInfo
      description: The entry's info
    - id: owningModID
      type: System.String
      description: The ID of the mod (id that is set in `modinfo.json` file) that this entry belongs to, set this if you'd like this entry to automatically unload when the mod gets disabled
    content.vb: Public Sub New(name As String, info As EntryInfo, owningModID As String = Nothing)
  overload: RainWorldBestiary.Types.Entry.#ctor*
  nameWithType.vb: Entry.New(String, EntryInfo, String)
  fullName.vb: RainWorldBestiary.Types.Entry.New(String, RainWorldBestiary.Types.EntryInfo, String)
  name.vb: New(String, EntryInfo, String)
- uid: RainWorldBestiary.Types.Entry.#ctor(System.String,RainWorldBestiary.Types.Description,System.String,System.String,System.String,System.String)
  commentId: M:RainWorldBestiary.Types.Entry.#ctor(System.String,RainWorldBestiary.Types.Description,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,RainWorldBestiary.Types.Description,System.String,System.String,System.String,System.String)'
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Entry(string, Description, string, string, string, string)
  nameWithType: Entry.Entry(string, Description, string, string, string, string)
  fullName: RainWorldBestiary.Types.Entry.Entry(string, RainWorldBestiary.Types.Description, string, string, string, string)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public Entry(string name, Description description, string unlockID = "", string iconAtlasName = "", string lockedText = "This entry is locked.", string owningModID = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the entry
    - id: description
      type: RainWorldBestiary.Types.Description
      description: The main body of this entry
    - id: unlockID
      type: System.String
      description: The ID that will be used to determine whether this entry is unlocked or not
    - id: iconAtlasName
      type: System.String
      description: The name of the entry's icon in the atlas manager
    - id: lockedText
      type: System.String
      description: The text that is shown when pressing on the entry while its locked
    - id: owningModID
      type: System.String
      description: The ID of the mod (id that is set in `modinfo.json` file) that this entry belongs to, set this if you'd like this entry to automatically unload when the mod gets disabled
    content.vb: Public Sub New(name As String, description As Description, unlockID As String = "", iconAtlasName As String = "", lockedText As String = "This entry is locked.", owningModID As String = Nothing)
  overload: RainWorldBestiary.Types.Entry.#ctor*
  nameWithType.vb: Entry.New(String, Description, String, String, String, String)
  fullName.vb: RainWorldBestiary.Types.Entry.New(String, RainWorldBestiary.Types.Description, String, String, String, String)
  name.vb: New(String, Description, String, String, String, String)
- uid: RainWorldBestiary.Types.Entry.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:RainWorldBestiary.Types.Entry.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Entry(string, string, string, string, string, string)
  nameWithType: Entry.Entry(string, string, string, string, string, string)
  fullName: RainWorldBestiary.Types.Entry.Entry(string, string, string, string, string, string)
  type: Constructor
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  example: []
  syntax:
    content: public Entry(string name, string description, string unlockID = "", string iconAtlasName = "", string lockedText = "This entry is locked.", string owningModID = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the entry
    - id: description
      type: System.String
      description: The main body of this entry
    - id: unlockID
      type: System.String
      description: The ID that will be used to determine whether this entry is unlocked or not
    - id: iconAtlasName
      type: System.String
      description: The name of the entry's icon in the atlas manager
    - id: lockedText
      type: System.String
      description: The text that is shown when pressing on the entry while its locked
    - id: owningModID
      type: System.String
      description: The ID of the mod (id that is set in `modinfo.json` file) that this entry belongs to, set this if you'd like this entry to automatically unload when the mod gets disabled
    content.vb: Public Sub New(name As String, description As String, unlockID As String = "", iconAtlasName As String = "", lockedText As String = "This entry is locked.", owningModID As String = Nothing)
  overload: RainWorldBestiary.Types.Entry.#ctor*
  nameWithType.vb: Entry.New(String, String, String, String, String, String)
  fullName.vb: RainWorldBestiary.Types.Entry.New(String, String, String, String, String, String)
  name.vb: New(String, String, String, String, String, String)
- uid: RainWorldBestiary.Types.Entry.Equals(RainWorldBestiary.Types.Entry)
  commentId: M:RainWorldBestiary.Types.Entry.Equals(RainWorldBestiary.Types.Entry)
  id: Equals(RainWorldBestiary.Types.Entry)
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Equals(Entry)
  nameWithType: Entry.Equals(Entry)
  fullName: RainWorldBestiary.Types.Entry.Equals(RainWorldBestiary.Types.Entry)
  type: Method
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: Checks if this entry is the same as another entry
  example: []
  syntax:
    content: public bool Equals(Entry other)
    parameters:
    - id: other
      type: RainWorldBestiary.Types.Entry
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Entry) As Boolean
  overload: RainWorldBestiary.Types.Entry.Equals*
  implements:
  - System.IEquatable{RainWorldBestiary.Types.Entry}.Equals(RainWorldBestiary.Types.Entry)
- uid: RainWorldBestiary.Types.Entry.Error
  commentId: P:RainWorldBestiary.Types.Entry.Error
  id: Error
  parent: RainWorldBestiary.Types.Entry
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: Entry.Error
  fullName: RainWorldBestiary.Types.Entry.Error
  type: Property
  assemblies:
  - RainWorldBestiary
  namespace: RainWorldBestiary.Types
  summary: A default entry that's just an error, is always unlocked, and serves as a placeholder that appears when another entry cant be loaded
  example: []
  syntax:
    content: public static Entry Error { get; }
    parameters: []
    return:
      type: RainWorldBestiary.Types.Entry
    content.vb: Public Shared ReadOnly Property [Error] As Entry
  overload: RainWorldBestiary.Types.Entry.Error*
references:
- uid: RainWorldBestiary.Types
  commentId: N:RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.html
  name: RainWorldBestiary.Types
  nameWithType: RainWorldBestiary.Types
  fullName: RainWorldBestiary.Types
  spec.csharp:
  - uid: RainWorldBestiary
    name: RainWorldBestiary
    isExternal: true
    href: RainWorldBestiary.html
  - name: .
  - uid: RainWorldBestiary.Types
    name: Types
    isExternal: true
    href: RainWorldBestiary.Types.html
  spec.vb:
  - uid: RainWorldBestiary
    name: RainWorldBestiary
    isExternal: true
    href: RainWorldBestiary.html
  - name: .
  - uid: RainWorldBestiary.Types
    name: Types
    isExternal: true
    href: RainWorldBestiary.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{RainWorldBestiary.Types.Entry}
  commentId: T:System.IEquatable{RainWorldBestiary.Types.Entry}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Entry>
  nameWithType: IEquatable<Entry>
  fullName: System.IEquatable<RainWorldBestiary.Types.Entry>
  nameWithType.vb: IEquatable(Of Entry)
  fullName.vb: System.IEquatable(Of RainWorldBestiary.Types.Entry)
  name.vb: IEquatable(Of Entry)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: RainWorldBestiary.Types.Entry
    name: Entry
    isExternal: true
    href: RainWorldBestiary.Types.Entry.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: RainWorldBestiary.Types.Entry
    name: Entry
    isExternal: true
    href: RainWorldBestiary.Types.Entry.html
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RainWorldBestiary.Types.EntryInfo
  commentId: T:RainWorldBestiary.Types.EntryInfo
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.EntryInfo.html
  name: EntryInfo
  nameWithType: EntryInfo
  fullName: RainWorldBestiary.Types.EntryInfo
- uid: RainWorldBestiary.Types.Entry.#ctor*
  commentId: Overload:RainWorldBestiary.Types.Entry.#ctor
  isExternal: true
  href: RainWorldBestiary.Types.Entry.html#RainWorldBestiary_Types_Entry__ctor
  name: Entry
  nameWithType: Entry.Entry
  fullName: RainWorldBestiary.Types.Entry.Entry
  nameWithType.vb: Entry.New
  fullName.vb: RainWorldBestiary.Types.Entry.New
  name.vb: New
- uid: RainWorldBestiary.Types.Description
  commentId: T:RainWorldBestiary.Types.Description
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.Description.html
  name: Description
  nameWithType: Description
  fullName: RainWorldBestiary.Types.Description
- uid: RainWorldBestiary.Types.Entry.Equals*
  commentId: Overload:RainWorldBestiary.Types.Entry.Equals
  isExternal: true
  href: RainWorldBestiary.Types.Entry.html#RainWorldBestiary_Types_Entry_Equals_RainWorldBestiary_Types_Entry_
  name: Equals
  nameWithType: Entry.Equals
  fullName: RainWorldBestiary.Types.Entry.Equals
- uid: System.IEquatable{RainWorldBestiary.Types.Entry}.Equals(RainWorldBestiary.Types.Entry)
  commentId: M:System.IEquatable{RainWorldBestiary.Types.Entry}.Equals(RainWorldBestiary.Types.Entry)
  parent: System.IEquatable{RainWorldBestiary.Types.Entry}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Entry)
  nameWithType: IEquatable<Entry>.Equals(Entry)
  fullName: System.IEquatable<RainWorldBestiary.Types.Entry>.Equals(RainWorldBestiary.Types.Entry)
  nameWithType.vb: IEquatable(Of Entry).Equals(Entry)
  fullName.vb: System.IEquatable(Of RainWorldBestiary.Types.Entry).Equals(RainWorldBestiary.Types.Entry)
  spec.csharp:
  - uid: System.IEquatable{RainWorldBestiary.Types.Entry}.Equals(RainWorldBestiary.Types.Entry)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: RainWorldBestiary.Types.Entry
    name: Entry
    isExternal: true
    href: RainWorldBestiary.Types.Entry.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{RainWorldBestiary.Types.Entry}.Equals(RainWorldBestiary.Types.Entry)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: RainWorldBestiary.Types.Entry
    name: Entry
    isExternal: true
    href: RainWorldBestiary.Types.Entry.html
  - name: )
- uid: RainWorldBestiary.Types.Entry
  commentId: T:RainWorldBestiary.Types.Entry
  parent: RainWorldBestiary.Types
  isExternal: true
  href: RainWorldBestiary.Types.Entry.html
  name: Entry
  nameWithType: Entry
  fullName: RainWorldBestiary.Types.Entry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: RainWorldBestiary.Types.Entry.Error*
  commentId: Overload:RainWorldBestiary.Types.Entry.Error
  isExternal: true
  href: RainWorldBestiary.Types.Entry.html#RainWorldBestiary_Types_Entry_Error
  name: Error
  nameWithType: Entry.Error
  fullName: RainWorldBestiary.Types.Entry.Error
